import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


train = pd.read_csv('train.csv')
test  = pd.read_csv('test.csv')

#missing training data
Total=train.isnull().sum().sort_values(ascending=False)

#missing training data
Test_total=test.isnull().sum().sort_values(ascending=False)


train['Embarked']=train['Embarked'].fillna(value='U')

x_train = train.iloc[:,[2,4,5,6,7,9,11]].values
x_test  = test.iloc[:,[1,3,4,5,6,8,10]].values
y_train = train.iloc[:,[1]].values


from sklearn.preprocessing import Imputer
md=Imputer()
x_train[:,[2]]=md.fit_transform(x_train[:,[2]])
x_test[:,[2]]=md.fit_transform(x_test[:,[2]])
x_test[:,[5]]=md.fit_transform(x_test[:,[5]])


from sklearn.preprocessing import LabelEncoder,OneHotEncoder
lb = LabelEncoder()
x_train[:,1] = lb.fit_transform(x_train[:,1])
x_train[:,6] = lb.fit_transform(x_train[:,6])
x_test[:,1]  = lb.fit_transform(x_test[:,1])
x_test[:,6]  = lb.fit_transform(x_test[:,6])
one = OneHotEncoder(categorical_features=[1])
x_train = one.fit_transform(x_train).toarray()
x_test  = one.fit_transform(x_test).toarray()
#feature scaling
from sklearn.preprocessing import StandardScaler
std = StandardScaler()
x_train = std.fit_transform(x_train)
x_test = std.fit_transform(x_test)

from sklearn.ensemble import RandomForestClassifier
rfc = RandomForestClassifier()
rfc.fit(x_train,y_train)

#predicting using test set
y_pred = rfc.predict(x_test)
#Create a  DataFrame with the passengers ids and our prediction regarding whether they survived or not
submission = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':y_pred})
#Visualize the first 5 rows
submission.head()

filename = 'Titanic Predictions 1.csv'

submission.to_csv(filename,index=False)

print('Saved file: ' + filename)

